---
description: 
globs: 
alwaysApply: true
---
# BMF-CSS 設計ルール
## 設計方針
- カラーパレット・カラースケールに沿ったデザインになっているか
- セマンティッククラス：`.btn`, `.card`, `.input` など、再利用可能なUI構造
- ユーティリティクラス：`.mt-2`, `.text-center`, `.flex` など、補助的な調整用
- BEMではなく、用途に応じたシンプルなクラス名を優先（例：`.btn-primary`, `.text-muted`）
- `.flex`, `.flex-col`, `.items-center`, `.justify-between` などの基本ユーティリティを提供
- グリッドは必要最小限の`.grid`, `.gap-*`レベルに留める
- レスポンシブはメディアクエリによるユーティリティプレフィックス（例：`md:flex`）で対応
- 表示切替ユーティリティ（`.hidden`, `.block`, `.sr-only`）あり

# BMF-CSS ドキュメント作成ルール

## ドキュメント作成の基本方針

- BMF-CSSが提供するCSSのみを使用すること。
- インラインスタイルは禁止。
- ドキュメント専用のclassやidの定義は禁止。
- 追加スタイルが必要な場合は、事前に相談してから使用を決定すること。

## ドキュメント構造

- ドキュメントは単一ページ構成とする。
- ナビゲーションは、BMF-CSSの提供する固定ヘッダーを用いる。
- 言語は英語のみとする。

## コンテンツ構成（アウトライン）

### 1. Overview
- フレームワークの紹介
- 特徴と利点
- 設計思想（セマンティック + ユーティリティのハイブリッド）

### 2. Installation & Usage
- NPM / Yarnでのインストール方法
- CDN利用方法
- プロジェクトへの組み込み方

### 3. Base
- リセットとノーマライズ
- ルート要素（html, body）
- タイポグラフィ基本設定
- リンクスタイル
- フォームリセット
- コード例

### 4. Tokens
- カラーシステム
- タイポグラフィ変数
- スペーシング
- シャドウとエレベーション
- ブレークポイント
- CSSカスタムプロパティ一覧
- コード例

### 5. Components
- 各コンポーネントに3種類の実装例（CSS-Based, Hybrid, Attribute-Based）を記載
  - ボタン
  - フォーム要素
  - カード
  - ナビゲーション
  - アラート / 通知
  - モーダル
  - ツールチップ
  - タブ
  - テーブル
  - ページネーション
  - その他UIパーツ

### 6. Utilities
- スペーシング（margin, padding）
- テキストスタイル
- 表示プロパティ
- 色・背景
- ボーダー・シャドウ
- フレックス・グリッド
- ポジショニング
- 使用例付きで記載すること

### 7. Themes
- デフォルトテーマ
- ダークモード（3つの実装パターン）
- カスタマイズ方法
- CSSカスタムプロパティの活用
- コード例を含める

### 8. Demos
- 各実装パターンでの実用的なデモを提供
  - ブログサイト
  - 管理画面
  - ダッシュボード
  - ECサイト
  - ポートフォリオサイト
  - ランディングページ

### 9. API Reference
- クラス名一覧とその説明
- 変数とカスタマイズポイント
- data属性一覧
- JavaScriptインターフェースの仕様

## 表示に関するルール

- コード例にはBMF-CSSが提供するコードブロックを使用すること。
- 実装コードと表示結果は上下に縦並びで配置。
- 実装パターンの切り替えはBMF-CSSのタブUIを使用（CSS-Based → Hybrid → Attribute-Basedの順）。

## レスポンシブ対応

- BMF-CSSのレスポンシブ機能のみを使用すること。
- モバイルナビゲーションもBMF-CSSのコンポーネントを使用。

## ページ共通要素

- ヘッダーとフッター：BMF-CSSの既存コンポーネントを使用。
- サイドバーナビゲーション：BMF-CSSのナビゲーションコンポーネントを使用。
- レイアウト：BMF-CSSのレイアウトコンポーネントのみで構築。

## 追加スタイルについて

- どうしても必要な場合（例：コードハイライト等）は、必ず事前に相談すること。
