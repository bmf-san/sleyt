name: Release to NPM

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests and Linting
        run: |
          npm run lint:css
          npm run lint:html

      - name: Build CSS
        run: npm run build:css

      - name: Verify build output
        run: |
          echo "Build output verification:"
          ls -la dist/css/
          echo "File sizes:"
          du -h dist/css/*

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "version=$TAG" >> $GITHUB_OUTPUT
          echo "Extracted version: $TAG"

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Commit version update to repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout main
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git push origin main

      - name: Verify package contents
        run: |
          echo "Package contents:"
          npm pack --dry-run

      - name: Publish to NPM
        run: |
          echo "Publishing to NPM..."
          echo "Registry: $(npm config get registry)"
          echo "User: $(npm whoami)"
          echo "Package name: $(npm pkg get name)"
          echo "Package version: $(npm pkg get version)"

          # Check if package already exists
          if npm view sleyt@${{ steps.version.outputs.version }} version 2>/dev/null; then
            echo "Version ${{ steps.version.outputs.version }} already exists, skipping publish"
            exit 0
          fi

          npm publish --provenance || {
            echo "Publish failed, checking package status..."
            npm view sleyt versions --json
            exit 1
          }
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## ðŸŽ‰ Sleyt CSS Framework ${{ steps.version.outputs.version }}

            A minimal and modern CSS framework with glass morphism design and data visualization components.

            ### âœ¨ What's New
            See the [CHANGELOG](https://github.com/bmf-san/sleyt/compare/${{ github.event.before }}..${{ steps.version.outputs.version }}) for detailed changes in this release.

            ### ðŸ“¦ Installation
            ```bash
            npm install sleyt@${{ steps.version.outputs.version }}
            ```

            ### ðŸ“š Documentation
            [View Documentation](https://bmf-san.github.io/sleyt/)

            ### ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/sleyt)
            - [GitHub Repository](https://github.com/bmf-san/sleyt)
          draft: false
          prerelease: false
